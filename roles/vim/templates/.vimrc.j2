" NOTES:
" Vim uses " for comments annoyingly!

"-------------------------------------------------------------------
" Vim-Plug
"-------------------------------------------------------------------
" Install Vim-plug
let data_dir = has('nvim') ? stdpath('data') . '/site' : '~/.vim'
if empty(glob(data_dir . '/autoload/plug.vim'))
  silent execute '!curl -fLo '.data_dir.'/autoload/plug.vim --create-dirs  https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

" Specify a directory for plugins
call plug#begin('~/.vim/plugged')
Plug 'neoclide/coc.nvim', {'branch': 'release'}
Plug 'luochen1990/rainbow'
Plug 'flazz/vim-colorschemes'
call plug#end()

"-------------------------------------------------------------------
" CoC Conquer of Commands Configs
"-------------------------------------------------------------------
let g:coc_global_extensions = ['coc-tabnine','coc-yaml','coc-json','coc-java', 'coc-jedi']

"-------------------------------------------------------------------
" NERDTree Configs
"-------------------------------------------------------------------
let g:NERDTreeHijackNetrw = 1
au VimEnter NERD_tree_1 enew | execute 'NERDTree '.argv()[0]

" OLD NERDTree CONFIGS
" Start NERDTree. If a file is specified, move the cursor to its window.
"autocmd StdinReadPre * let s:std_in=1
"autocmd VimEnter * NERDTree | if argc() > 0 || exists("s:std_in") | wincmd p | endif

let NERDTreeShowHidden=1
let NERDTreeMapActivateNode='<space>'
let g:NERDTreeWinPos = "right"

"-------------------------------------------------------------------
" Rainbow
"-------------------------------------------------------------------
let g:rainbow_active = 1 "set to 0 if you want to enable it later via :RainbowToggle

"-------------------------------------------------------------------
" Mapping controls
"-------------------------------------------------------------------
mapc "Remap to defaults first

" Navigation
noremap h <Up>
noremap j <Down>
noremap k <Left>
noremap l <Right>
" Window Navigation
noremap <C-w>h <C-w><Up> 
noremap <C-w>j <C-w><Down> 
noremap <C-w>k <C-w><Left> 
noremap <C-w>l <C-w><Right> 

"-------------------------------------------------------------------
" LightLine
"-------------------------------------------------------------------

function! FilenameForLightline()
    return expand('%')
endfunction

function! TabnameForLightline(n)
  let buflist = tabpagebuflist(a:n)
  let winnr = tabpagewinnr(a:n)
  let bufnum = buflist[winnr - 1]
  let bufname = expand('#'.bufnum.':t')
  let buffullname = expand('#'.bufnum.':p')
  let buffullnames = []
  let bufnames = []
  for i in range(1, tabpagenr('$'))
    if i != a:n
      let num = tabpagebuflist(i)[tabpagewinnr(i) - 1]
      call add(buffullnames, expand('#' . num . ':p'))
      call add(bufnames, expand('#' . num . ':t'))
    endif
  endfor
  let i = index(bufnames, bufname)
  if strlen(bufname) && i >= 0 && buffullnames[i] != buffullname
    return substitute(buffullname, '.*/\([^/]\+/\)', '\1', '')
  else
    return strlen(bufname) ? bufname : '[No Name]'
  endif
endfunction

set laststatus=2
let g:lightline = {
      \ 'colorscheme': 'wombat',
      \ 'separator': { 'left': '', 'right': '' },
      \ 'subseparator': { 'left': '', 'right': '' },
      \ 'component_function': {
      \	  'filename': 'FilenameForLightline',
      \   'cocstatus': 'coc#status'
      \ },
      \ 'active': {
      \   'left': [ [ 'mode', 'paste' ],
      \             [ 'cocstatus', 'readonly', 'filename', 'modified' ] ]
      \ },
      \ }

let g:lightline.tab_component_function = {
      \ 'filename': 'TabnameForLightline',
      \ 'modified': 'lightline#tab#modified',
      \ 'readonly': 'lightline#tab#readonly',
      \ 'tabnum': 'lightline#tab#tabnum'
      \ }

"-------------------------------------------------------------------
" Extra Configs
"-------------------------------------------------------------------

" Change default colorscheme
colorscheme 256-jungle

" Disable compatibility with vi which can cause unexpected issues.
set nocompatible
set noshowmode
set mouse=a
set number
set autoindent

filetype on
filetype plugin on
filetype indent on
syntax on

" Change cursor
set cursorline
autocmd InsertEnter * set cul
autocmd InsertLeave * set nocul

" Commands
command Tree NERDTree

" Reload vimrc configuration file
command Reload :source ~/.vimrc

" Enable auto completion menu after pressing TAB.
set wildmenu

" Make wildmenu behave like similar to Bash completion.
set wildmode=list:longest

" There are certain files that we would never want to edit with Vim.
" Wildmenu will ignore files with these extensions.
set wildignore=*.docx,*.jpg,*.png,*.gif,*.pdf,*.pyc,*.exe,*.flv,*.img,*.xlsx

